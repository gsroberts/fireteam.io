@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@@model @Model.ViewDataTypeName

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = "@Model.ViewName";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.ViewName</title>
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }
}
    
<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header card-header-icon" data-background-color="rose">
                <i class="material-icons">dashboard</i>
            </div>
            <div class="card-content">
                <h4 class="card-title">View @Model.ViewDataTypeShortName -
                    <small class="category"></small>
                </h4>

                <div>
                    <h4>@Model.ViewDataTypeShortName</h4>
                    <hr />
                    <dl class="dl-horizontal">
                        @{
                            foreach (var property in Model.ModelMetadata.Properties)
                            {
                                if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey)
                                {
                                    <dt>
                                        @@Html.DisplayNameFor(model => model.@GetValueExpression(property))
                                    </dt>
                                    <dd>
                                        @@Html.DisplayFor(model => model.@GetValueExpression(property))
                                    </dd>
                                }
                            }
                            foreach (var navigation in Model.ModelMetadata.Navigations)
                            {
                                <dt>
                                    @@Html.DisplayNameFor(model => model.@GetValueExpression(navigation))
                                </dt>
                                <dd>
                                    @@Html.DisplayFor(model => model.@GetValueExpression(navigation).@navigation.DisplayPropertyName)
                                </dd>
                            }
                        }    </dl>
                </div>
                <div>
                    @{
                        string pkName = GetPrimaryKeyName();
                        if (pkName != null)
                        {
                            @:<a asp-action="Edit" asp-route-id="@@Model.@pkName">Edit</a> |
                            @:<a asp-action="Index">Back to List</a>
                        }
                        else
                        {
                            @:@@Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
                            @:<a asp-action="Index">Back to List</a>
                        }
                    }</div>
            </div>
        </div>
    </div>
</div>

@{
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
        //ClearIndent();
@:</body>
@:</html>
    }
}
@functions
{
    string GetPrimaryKeyName()
    {
        return (Model.ModelMetadata.PrimaryKeys != null && Model.ModelMetadata.PrimaryKeys.Length == 1)
        ? Model.ModelMetadata.PrimaryKeys[0].PropertyName
        : null;
    }

    string GetValueExpression(PropertyMetadata property)
    {
        return property.PropertyName;
    }

    string GetValueExpression(NavigationMetadata navigation)
    {
        return navigation.AssociationPropertyName;
    }
}